openapi: 3.0.0
info:
  title: Car Rental API
  description: API for managing car rentals
  version: 1.0.0
servers:
  - url: https://api.carrental.com/v1
paths:
  /cars:
    get:
      summary: Get a list of available cars
      operationId: getCars
      responses:
        '200':
          description: A list of available cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add a new car to the fleet
      operationId: addCar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Car added successfully
          content:
            application/json:
              schema:
                type: string
                example: uid56sd5fsdfs
                description: Id of the created resource
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /customers:
    get:
      summary: Get a list of customers
      operationId: getCustomers
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Register a new customer
      operationId: registerCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Customer registered successfully
          content:
            application/json:
              schema:
                type: string
                example: uid56sd5fsdfs
                description: Id of the created resource
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /reservations:
    post:
      summary: Create a new car reservation
      operationId: createReservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                type: string
                example: uid56sd5fsdfs
                description: Id of the created resource
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get a list of reservations
      operationId: getReservations
      responses:
        '200':
          description: A list of reservations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Car:
      type: object
      properties:
        id:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        available:
          type: boolean
        category:
          type: string
          enum: [SUV, Hatch, Sport]
    Customer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Reservation:
      type: object
      properties:
        id:
          type: string
        customerId:
          type: string
        carId:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string